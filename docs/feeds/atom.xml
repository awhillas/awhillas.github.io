<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Alexander Whillas</title><link href="http://alexander.whillas.com/" rel="alternate"></link><link href="http://alexander.whillas.com/feeds/atom.xml" rel="self"></link><id>http://alexander.whillas.com/</id><updated>2023-08-09T00:00:00+12:00</updated><entry><title>Free Energy Principle</title><link href="http://alexander.whillas.com/free-energy-principle.html" rel="alternate"></link><published>2023-08-08T00:00:00+12:00</published><updated>2023-08-09T00:00:00+12:00</updated><author><name>Alexander Whillas</name></author><id>tag:alexander.whillas.com,2023-08-08:/free-energy-principle.html</id><summary type="html">&lt;p&gt;My understanding of the Free Energy Principle and how it applies to (machine) learning agents.&lt;/p&gt;</summary><content type="html">&lt;h2&gt;The basics&lt;/h2&gt;
&lt;p&gt;&lt;img alt="Free Energy Principle, Basic outline" src="http://alexander.whillas.com/images/fep_simple.png" /&gt;&lt;/p&gt;
&lt;p&gt;So the Free Energy Principle (FEP) is a sort of universals objective function for cognitive agents i.e. agents with some sort of cognition or internal world representation that learns. It learns from sensory input and some actions that it can enact on the world.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;Sensation&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Internal&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Actions&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;World&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;changes&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Sensations&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Its a feedback loop. What they are calling free energy is the difference between the predicted (by the model) sensor(s) state and the actual sensor(s) state. The system tires to minimise this difference, or entropy, or &amp;ldquo;surprise&amp;rdquo; as its call in relation to the FEP.&lt;/p&gt;
&lt;h2&gt;My RoboCup Experience&lt;/h2&gt;
&lt;p&gt;&lt;img alt="Robocup Standard Platform league" src="http://alexander.whillas.com/images/robocup.png" /&gt;&lt;/p&gt;
&lt;p&gt;So I was vaguely involved in the &lt;a href="https://www.robocup.org/"&gt;RoboCup&lt;/a&gt;&lt;sup id="fnref:robocup"&gt;&lt;a class="footnote-ref" href="#fn:robocup"&gt;1&lt;/a&gt;&lt;/sup&gt; at UNSW when I was doing my masters back in 2013. The control systems on the bots then was very crude. I thought that UNSW would be using some sort of reinforcement learning (RL) to control walking but they were actually hand programming every movement. I realised there where all these sensors on the &amp;ldquo;Standard Platform&amp;rdquo; bot that we were not using and my thought at the time was that if we feed these into a feedback loop into a learning algorithm like RL&lt;sup id="fnref:notRL"&gt;&lt;a class="footnote-ref" href="#fn:notRL"&gt;2&lt;/a&gt;&lt;/sup&gt; with the objective of keeping itself upright then it might be able to learn walk. Furth more, since the robots were getting damaged quite easily from falling over &lt;em&gt;a lot&lt;/em&gt; individual robots might learn how to deal with their own particular damage.&lt;/p&gt;
&lt;h2&gt;Consciousness?&lt;/h2&gt;
&lt;p&gt;This leads to pondering if this is a system for understanding how consciousness might emerge i.e. if the system then has a model of itself in the world it is modelling, in fact, it would be hard to imagine how it would operate without it.&lt;/p&gt;
&lt;h2&gt;Feedback is the key&lt;/h2&gt;
&lt;p&gt;From my days of making experimental music/noise I know that feedback is very powerful. It was what always made the most interesting results. Here too I think the feedback mechanism is a key factoring in making this work. The system balances itself.&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn:robocup"&gt;
&lt;p&gt;Competition between universities to make robots play soccer. I&amp;rsquo;d really like to get my hands on a simple robot I could program and try some of these ideas out on!&amp;#160;&lt;a class="footnote-backref" href="#fnref:robocup" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:notRL"&gt;
&lt;p&gt;I would obviously say a deep neural network now.&amp;#160;&lt;a class="footnote-backref" href="#fnref:notRL" title="Jump back to footnote 2 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</content><category term="Machine Learning"></category></entry><entry><title>Enshittification</title><link href="http://alexander.whillas.com/enshittification.html" rel="alternate"></link><published>2023-08-04T00:00:00+12:00</published><updated>2023-08-04T00:00:00+12:00</updated><author><name>Alexander Whillas</name></author><id>tag:alexander.whillas.com,2023-08-04:/enshittification.html</id><summary type="html">&lt;p&gt;How to break free of big tech or at least reintroduce competition to force them to be better.&lt;/p&gt;</summary><content type="html">&lt;p&gt;As a designation for a particular phenomenon affecting online platforms, coined by Canadian-British blogger, journalist, and science fiction author Cory Doctorow in 2022.&lt;/p&gt;
&lt;p&gt;https://news.ycombinator.com/item?id=36974082&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pca.st/yr3hd7f9"&gt;ABC&amp;rsquo;s Future Tense podcast interview with Cory Doctorow&lt;/a&gt; is quite good and get to the heart of the matter.&lt;/p&gt;</content><category term="Life"></category></entry><entry><title>Reflections on Motivation</title><link href="http://alexander.whillas.com/reflections-on-motivation.html" rel="alternate"></link><published>2023-07-04T00:00:00+12:00</published><updated>2023-07-05T00:00:00+12:00</updated><author><name>Alexander Whillas</name></author><id>tag:alexander.whillas.com,2023-07-04:/reflections-on-motivation.html</id><summary type="html">&lt;p&gt;Reflections on what makes motivation in us.&lt;/p&gt;</summary><content type="html">&lt;p&gt;I&amp;rsquo;ve read, and been told, that while working on a computer game its important to keep a dev-log of your progress, your thoughts and musings. But why?&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ve been pondering motivation in general for awhile now. There is the old adage by &lt;a href="https://en.wikipedia.org/wiki/Antoine_de_Saint-Exup%C3%A9ry"&gt;Antoine de Saint-Exupéry&lt;/a&gt; (apparently) which has been my guiding light for many years now and is the backbone of my school of management philosophy:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If you want to build a ship, don&amp;rsquo;t drum up people to collect wood and don&amp;rsquo;t assign them tasks and work, but rather teach them to long for the endless immensity of the sea.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So, motivation is the key to any project.&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1"&gt;1&lt;/a&gt;&lt;/sup&gt; With motivation, people will organise themselves, learn anything that is required press on, working into the night. But how to muster motivation? How do you command it?&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ve noticed that problems I have spent a long time working on, for work, tend to linger in my mind and I continue to think about them until they are solved, even in my spare time. This seems to be a general rule: &lt;em&gt;the more you think about something the more motivated you are by it.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Having read some of &lt;a href="https://en.wikipedia.org/wiki/L%C3%A1szl%C3%B3_Polg%C3%A1r"&gt;László Polgár&lt;/a&gt;&amp;lsquo;s book, &amp;lsquo;&lt;a href="https://www.goodreads.com/book/show/20877035-bring-up-genius"&gt;Bring Up Genius!&lt;/a&gt;&amp;rsquo;, which covers how he raise his three daughters to become chess champions his main technique seems to have been to saturate them in chess culture. He decorated their rooms with chess games and puzzles and they were constantly playing each other and selected opponents. (He also attributed positive feed back as aslo being very important, 10 positive for every 1 negative). He started this at a young age.&lt;/p&gt;
&lt;p&gt;All that exposure to chess must have permeated the child&amp;rsquo;s mind, so they were thinking about it almost non-stop. Perhaps after a certain level of exposure there is a run away effect and this leads to obsession? I noticed that when I was into sound art I would help &lt;a href="https://www.nkprojekt.de/"&gt;going to performances&lt;/a&gt; constantly helped keep me inspired.&lt;/p&gt;
&lt;p&gt;So, &lt;strong&gt;consistent exposure, to what ever you want to me motivated to do, is the key to staying motivated.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;You &lt;em&gt;can&lt;/em&gt; choose what you want to be motivated to do but you have to remove all preconceptions of it that might be negative or even just misunderstandings. For example if one were to learn accounting one would have to dispel the idea that its boring, dull or uncreative&lt;sup id="fnref:2"&gt;&lt;a class="footnote-ref" href="#fn:2"&gt;2&lt;/a&gt;&lt;/sup&gt;. Instead one needs to make your mind a blank slate on the topic before you start and look for wonder in the details, and there are always details.&lt;/p&gt;
&lt;p&gt;As a side note this also applies to everything you expose your mind to I&amp;rsquo;ve noticed. The movies/TV shoes you watch, the books you read, events you go to, the people you talk to all mix together, vying for influence in your mind. The quieter your life, the more you notice new things entering it, the calmer your mind the more ripples any one of these things makes. Like a stone dropped into a still water.&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;There is also, what I like to call, the Pharaoh approach to building in which you whip people to dead and then replace them with more people which you whip to dead. See the research industry to an example of this.&amp;#160;&lt;a class="footnote-backref" href="#fnref:1" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:2"&gt;
&lt;p&gt;Ideally it is uncreative else you might have a problem with the law.&amp;#160;&lt;a class="footnote-backref" href="#fnref:2" title="Jump back to footnote 2 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</content><category term="Life"></category></entry><entry><title>Phonetica Game Dev Log</title><link href="http://alexander.whillas.com/reading-video-game-dev-log.html" rel="alternate"></link><published>2023-06-11T00:00:00+12:00</published><updated>2023-08-07T00:00:00+12:00</updated><author><name>Alexander Whillas</name></author><id>tag:alexander.whillas.com,2023-06-11:/reading-video-game-dev-log.html</id><summary type="html">&lt;p&gt;A new game I&amp;rsquo;m working on to help kids learn to read.&lt;/p&gt;</summary><content type="html">&lt;h2&gt;10 August, 2023 - First play test&lt;/h2&gt;
&lt;p&gt;So I gave it to my son this morning and he played through it a bit. Some notes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Was too fast. One second between words dropping was too short, especially at beginning. Perhaps increment as go.&lt;/li&gt;
&lt;li&gt;Didn&amp;rsquo;t get the idea of spelling out the word. Need to somehow be explained? Perhaps 3 phoneme words were too hard to start with, try 2. Will make discovery easier.&lt;/li&gt;
&lt;li&gt;Found the explosions fun and laughed when they happened.&lt;/li&gt;
&lt;li&gt;Once all the letters filled the screen it became a challenge. He had to know the order of the letters.&lt;/li&gt;
&lt;li&gt;He found blowing up his own name a kick :)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Going forward&lt;/h3&gt;
&lt;ul class="task-list"&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" disabled/&gt; The selection order mechanic was confusing. Should clear as soon as the wrong letter is chosen.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" disabled/&gt; Make the selection more obvious i.e. rotate colour of selected?&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" disabled/&gt; Have the word written somewhere, perhaps on the background&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" disabled/&gt; Change background with word.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" disabled/&gt; Announce the number of words left to explode.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" disabled/&gt; Should track what he has played and what took him a long time vs what was easy and took less time.&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" disabled/&gt; Bug in which the first word is repeated.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;New material&lt;/h3&gt;
&lt;p&gt;&lt;img alt="Word list from Sons's school" src="http://alexander.whillas.com/images/word_list_from_sons_school.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;I too the kid to school this morning and while I was waiting for the teacher to show up I found a phonetic chart. On the back were lists of words in &lt;strong&gt;alphabetical order&lt;/strong&gt;! Looping through the alphabet can make up a level! Seems obvious now, but I guess since I&amp;rsquo;m using phonemes not letters maybe its not. Though some letters have limited number of 2 and 3 words&amp;hellip; still, will be easy for 3 letter words.&lt;/p&gt;
&lt;h2&gt;7th August, 2023 - The need for bling&lt;/h2&gt;
&lt;p&gt;So I have the basics of the game setup with simple level progressions. I&amp;rsquo;m not sure if it is fun yet? Time for some play testing with Asher?&lt;/p&gt;
&lt;p&gt;TODO:&lt;/p&gt;
&lt;ul class="task-list"&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" disabled checked/&gt; Empty scene transition between word&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" disabled/&gt; Rest of the words&lt;ul class="task-list"&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" disabled/&gt; Sound recordings of words being said, get from?&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" disabled/&gt; Update the syllabus file, checking phonemes against OED&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" disabled/&gt; Bling Effects when!&lt;ul class="task-list"&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" disabled/&gt; the countdown time is updated&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" disabled/&gt; word changes&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" disabled/&gt; background?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;5th August, 2023 - &amp;ldquo;-er&amp;rdquo;?&lt;/h2&gt;
&lt;p&gt;So I ran into an issue with translating &amp;ldquo;Asher&amp;rdquo; into phonemes. &lt;a href="https://github.com/open-dict-data/ipa-dict"&gt;&lt;abbr title="International Phonetic Alphabet"&gt;IPA&lt;/abbr&gt;-dict&lt;/a&gt; says its /&amp;rsquo;æʃɐ/ but I was unsure about the &amp;lsquo;ɐ&amp;rsquo; sound/phone for UK English as it&amp;rsquo;s the same as vowel in fox /fˈɒks/ (according to the same dictionary, but now that I look at it, its a different upside-down &amp;lsquo;a&amp;rsquo;). According to the video &lt;a href="https://www.youtube.com/watch?v=ZyULNC_8SNw&amp;amp;ab_channel=EnglishLanguageClub"&gt;&amp;lsquo;er&amp;rsquo; Ending Words and the Schwa Phoneme&lt;/a&gt; it should be the Schwa &amp;lsquo;ə&amp;rsquo; sound.&lt;/p&gt;
&lt;p&gt;Although there is no &amp;lsquo;ɐ&amp;rsquo; in that chart only &amp;lsquo;ɒ&amp;rsquo;? According to the &lt;a href="https://www.ipachart.com/"&gt;&lt;abbr title="International Phonetic Alphabet"&gt;IPA&lt;/abbr&gt; interactive chart&lt;/a&gt; it seems that &amp;lsquo;ə&amp;rsquo; is in fact correct, but all three could be correct depending on which part of the UK your from? The &lt;a href="https://www.oed.com/dictionary/basher_n1?tab=factsheet#26849264"&gt;OED&lt;/a&gt; says &amp;lsquo;ə&amp;rsquo; so I guess I&amp;rsquo;ll go with that. I&amp;rsquo;m not sure how one decides what is the official phoneme for a pronunciation for a dialect. Maybe the OED is it?&lt;/p&gt;
&lt;h2&gt;3rd August, 2023 - Explosions!&lt;/h2&gt;
&lt;p&gt;Got the explosions working. Had to improvise with pymunk as it doesn&amp;rsquo;t have a built in explosion effect. I replace the block to blow up with a circle for ~200ms and then make it disappear. I also made the explosion weightless so it wouldn&amp;rsquo;t roll down.&lt;/p&gt;
&lt;p&gt;I got the explosions sounds &lt;a href="https://www.freesoundeffects.com/free-sounds/explosion-10070/"&gt;here&lt;/a&gt; and the image from &lt;a href="https://commons.wikimedia.org/wiki/File:Explosion-153710_icon.svg"&gt;wikimedia&lt;/a&gt;. Good bless creative commons!&lt;/p&gt;
&lt;h2&gt;25th July, 2023 - First demo&lt;/h2&gt;
&lt;p&gt;&lt;img alt="First Demo" src="http://alexander.whillas.com/images/phonetica/mvp01.gif" /&gt;&lt;/p&gt;
&lt;p&gt;So I&amp;rsquo;ve started to code up the demo of the idea. Still much to do:&lt;/p&gt;
&lt;ul class="task-list"&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" disabled checked/&gt; Sound phenome when clicking box&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" disabled checked/&gt; Play word sound when phonemes appear&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" disabled checked/&gt; Track order that letters are selected in&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" disabled checked/&gt; Letters explode when right order is chosen&lt;/li&gt;
&lt;li class="task-list-item"&gt;&lt;input type="checkbox" disabled/&gt; Compile rest of the words Content. (I just choose words I had voice recordings for)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Side note&lt;/h3&gt;
&lt;p&gt;It was pretty cool to get the first(ish) version working, and actually it was very easy with python. When I first saw the thing I&amp;rsquo;ve had in my head for weeks appear on screen and start to work(ish) there was a buzz of gratification. Its a cool feeling.&lt;/p&gt;
&lt;p&gt;I watched a short video of &lt;a href="https://www.youtube.com/shorts/K1JsNyEHrso"&gt;Trevor Noah talking about how he loves stand up comedy&lt;/a&gt; and giving the life advice of:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Live in a space where you are doing what you love.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I think that games could be that space for me.&lt;/p&gt;
&lt;h2&gt;23 July, 2023 - Physics is fun&lt;/h2&gt;
&lt;p&gt;&lt;img alt="pymunk demp / animated logo" src="http://alexander.whillas.com/images/pymunk_logo_animation.gif" /&gt;&lt;/p&gt;
&lt;p&gt;So I have a basic concept for the game. Its going to involve blocks dropping and using a physics engine to simulate that. I found a simple 2D physics engine called &lt;a href="http://www.pymunk.org/"&gt;pymunk&lt;/a&gt; which is an interface to the C library &lt;a href="http://chipmunk-physics.net/"&gt;Chipmunk2D&lt;/a&gt;. pymunk is under active development while Chipmunk2D seems to be feature complete. There is heaps of tutorials with pygame and pymunk so getting up-to-speed is quite easy and fun! There was a lot of low hanging fruit! To list what I went through:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;[&lt;span class="nv"&gt;Python&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;Physics&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;Simulation&lt;/span&gt;.&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;Galton&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;Board&lt;/span&gt;.&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;Pymunk&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;Tutorial&lt;/span&gt;]&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;https&lt;/span&gt;:&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="nv"&gt;www&lt;/span&gt;.&lt;span class="nv"&gt;youtube&lt;/span&gt;.&lt;span class="nv"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;watch&lt;/span&gt;?&lt;span class="nv"&gt;v&lt;/span&gt;&lt;span class="o"&gt;=-&lt;/span&gt;&lt;span class="nv"&gt;q_Vje2a6eY&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;t&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="nv"&gt;s&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;ab_channel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;CoderSpace&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;I&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;watched&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;this&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;and&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;used&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;code&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;as&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;starting&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;point&lt;/span&gt;.&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;Great&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;template&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;getting&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;pygame&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;and&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;pymunk&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;talking&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;each&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;other&lt;/span&gt;.
&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;[&lt;span class="nv"&gt;Using&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;mouse&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;and&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;keyboard&lt;/span&gt;]&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;https&lt;/span&gt;:&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="nv"&gt;pymunk&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;tutorial&lt;/span&gt;.&lt;span class="nv"&gt;readthedocs&lt;/span&gt;.&lt;span class="nv"&gt;io&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;en&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;latest&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;mouse&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;mouse&lt;/span&gt;.&lt;span class="nv"&gt;html&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;helped&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;me&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;create&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;touch&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;click&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;interaction&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;I&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;need&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;interacting&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;with&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;blocks&lt;/span&gt;.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;I did give up on trying to rotate the images to the same angle as the physics block.&lt;/p&gt;
&lt;h2&gt;14th July, 2023 - Just graphemes to phonemes&lt;/h2&gt;
&lt;p&gt;Phonetics is quite the rabbit hole. I just need English spellings, or graphemes, and their related phonemes. I found this chart for Australian English (I think)&lt;/p&gt;
&lt;p&gt;&lt;img alt="alphabetic-code-chart" src="http://alexander.whillas.com/images/alphabetic-code-chart.png" /&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In order to represent the 44 phonemes of Australian English we use a range of graphemes (letters or letter combinations).  Children need to know 150 - 200 of these phoneme/grapheme correspondences in order to read a reasonably complex text and these need to be taught explicitly and systematically. - &lt;a href="https://www.jocelynseamereducation.com/blog/46913-phonemes-and-graphemes"&gt;cite&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This two part video series about &lt;a href="https://www.youtube.com/watch?v=yxIrK5R8n0g"&gt;helping children sounding out words&lt;/a&gt; I found quite helpful. The &lt;a href="https://www.youtube.com/watch?v=5ID2fMAjx94"&gt;second part&lt;/a&gt; mentions some recent research&lt;sup id="fnref:reading"&gt;&lt;a class="footnote-ref" href="#fn:reading"&gt;1&lt;/a&gt;&lt;/sup&gt; on the topic and apparently the current approach to looking at the pictures and guessing the words is poor or &amp;ldquo;inefficient&amp;rdquo;. She recommends a problem solving approach of breaking the word up by underlining the phonemes and helping them with phonemes that the don&amp;rsquo;t know but letting them sound out the word phoneme by phoneme until they get the word.&lt;/p&gt;
&lt;h3&gt;An Idea!&lt;/h3&gt;
&lt;p&gt;This has given me the idea to have words broken up into their respective phonemes, with different colours, but written correctly and then slowly drift apart. The player then has to hit the phonemes in the order they were originally, sounding out the word. This then multiplied into many examples of the same thing with the letters getting mixed up, like soup, and the challenge is to put them all back together, click-on/touch them in the right order to clear the level.&lt;/p&gt;
&lt;h3&gt;How to start&lt;/h3&gt;
&lt;p&gt;There is a great set of documents which outline the Australian reading syllabus at &lt;a href="https://www.fireflyeducation.com.au/series/soundwaves/features/"&gt;Firefly Education&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m going to base my syllabus on the &lt;a href="https://www.fireflyeducation.com.au/downloads/Sound_Waves_NSW_Syllabus_Match_Early_Stage_1.pdf"&gt;Sound Waves NSW Early Stage 1 Syllabus&lt;/a&gt;. From that document:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In Sound Waves Foundation, phoneme–grapheme relationships are introduced in a very specific order. This minimises confusion for students and ensures they are up and running quickly with reading and spelling. The order begins with m, a, t, s, i, d, f, n and p so students can read and spell &lt;abbr title="Consonant-Vowel-Consonant e.g mat, sat, did, nap"&gt;CVC&lt;/abbr&gt; words such as mat, sat, did, nap etc.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="Sound Waves Foundation principles" src="http://alexander.whillas.com/images/sound_wave_foundation_princibles.png" /&gt;&lt;/p&gt;
&lt;p&gt;They have a system of pairing graphical icons for phonemes with the graphemes which is a good idea but stems from using print as a medium. I hope that I can just relate the sound of the phoneme directly with the graphemes by playing the sound when they touch the grapheme. This is the advantage of using an interactive medium (I hope).&lt;/p&gt;
&lt;h3&gt;Tracking learning&lt;/h3&gt;
&lt;p&gt;Also, I want to track the learning of a child. At the very minimum I&amp;rsquo;m going to need keep track of which part of the syllabus they are up to. The video game way is to just make them start from the beginning every time. Perhaps they unlock levels as they progress which gives them new icons at the start of they game so they can jump start at the latest or revisit previous levels?&lt;/p&gt;
&lt;p&gt;Also, some sort of report for for parents and teachers would be good. Not sure what they would like it see? Perhaps what they are good and bad at in terms of grapheme-phoneme mapping?&lt;/p&gt;
&lt;h2&gt;14th July, 2023 - Deep diving into Phonemes&lt;/h2&gt;
&lt;p&gt;So I&amp;rsquo;m trying to build the game content/levels aka the syllabus. The general structure is going to be:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;Phonemes&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Phones&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Words&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Texts&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;I&amp;rsquo;m focusing on the first step, but would like to incorporate some of the second. To begin with I need a list of the phonemes in English and grouped into vowels and consonants. I also need a list of short words (2-3 letters/phonemes) starting with the simple consonants, one vowel sound only. I combined the word frequencies with the word-&amp;gt;phoneme dictionary and then filtered to a list of words with one-to-one mapping of letters to phonemes (was a crude estimate will update the Gruut &lt;abbr title="International Phonetic Alphabet"&gt;IPA&lt;/abbr&gt; module [see bellow])&lt;/p&gt;
&lt;h3&gt;Gruut &lt;abbr title="International Phonetic Alphabet"&gt;IPA&lt;/abbr&gt; module&lt;/h3&gt;
&lt;p&gt;&lt;img alt="International Phonetic Alphabet code diagram" src="http://alexander.whillas.com/images/ipa.png" /&gt;&lt;/p&gt;
&lt;p&gt;I found a great python module for working with phonemes called &lt;a href="https://github.com/rhasspy/gruut-ipa"&gt;Gruut &lt;abbr title="International Phonetic Alphabet"&gt;IPA&lt;/abbr&gt;&lt;/a&gt;. It has some &lt;a href="https://github.com/rhasspy/gruut-ipa/tree/master/gruut_ipa/data"&gt;data&lt;/a&gt; for different languages (I&amp;rsquo;m keeping this in the back of my mind). I might try and do Russian in parallel so I can use the game for learning Russian and use myself as a test subject, but don&amp;rsquo;t want to get too side tracked for now. The &lt;a href="https://github.com/rhasspy/gruut-ipa/blob/master/gruut_ipa/data/en-gb/phonemes.txt"&gt;British English file&lt;/a&gt; has phonemes grouped which is handy. There are 42 phonemes. I don&amp;rsquo;t know where the 44 came from?.&lt;/p&gt;
&lt;p&gt;I tried to install the module and use the &amp;ldquo;print&amp;rdquo; function but it seems to only spit out 33 phonemes? I&amp;rsquo;m just going to write my own parser for its data files and move on. Lost a day to digging around it&amp;rsquo;s code. Its got way more info than I need.&lt;/p&gt;
&lt;h3&gt;Elsewhere&lt;/h3&gt;
&lt;p&gt;This is all good research for doing Text-to-Speech which I want to get back into. I might train a model to convert text to &lt;abbr title="International Phonetic Alphabet"&gt;IPA&lt;/abbr&gt; phonemes as I think I have an idea of how to do that now.&lt;/p&gt;
&lt;h2&gt;9th July, 2023 - Chat with a Speech Pathologist&lt;/h2&gt;
&lt;p&gt;Had a chat with my old friend Khye who is a speech pathologist.&lt;/p&gt;
&lt;p&gt;Her advice was to start on the simple one letter to one sound i.e. one-to-one mappings between glyphs and phonemes. Once they are confident with that start them on simple words. Then with words that do not have consonant clusters i.e. /brick/ where the &amp;ldquo;ck&amp;rdquo; are acting as one sound, better is /dog/ where each letter is a single sound and those are constant&lt;/p&gt;
&lt;p&gt;The words should be two to three letters and also only use one-to-one, one glyph to one phoneme sounds. There are some texts with this goal in mind released by the NSW government called &lt;a href="https://education.nsw.gov.au/teaching-and-learning/curriculum/literacy-and-numeracy/teaching-and-learning-resources/literacy/effective-reading-in-the-early-years-of-school/decodable-texts"&gt;decodable texts&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Decodable texts are specifically written for beginning readers as they are developing their blending and segmenting skills and their knowledge of the alphabetic code. Decodable texts support students as they practise by using a continuous meaningful text.
Decodable texts contain a very large percentage of words that incorporate the letter-sound relationships that students have been taught. Decodable texts increase in complexity as the student learns more of the phonetic code.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;These texts are behind a login so not accessible to the general public (for some reason?), but with the &lt;a href="https://github.com/open-dict-data/ipa-dict"&gt;ipa-dict&lt;/a&gt; I should be able to make my own: Filter words that have matching number of letters and phonemes, sort by &lt;a href="https://www.kaggle.com/datasets/rtatman/english-word-frequency?resource=download"&gt;word frequency&lt;/a&gt;, filter by number of letters/phonemes i.e. start with 2 and 3 letter words and go up from there. I guess the next step would be to make narratives out of these words.&lt;/p&gt;
&lt;h2&gt;8th July, 2023 - Building a Syllabus&lt;/h2&gt;
&lt;p&gt;I finished organising the English phonetic sounds I gathered from the &lt;a href="https://www.youtube.com/watch?v=XUCUhHUDZIY"&gt;phonic letter sounds video&lt;/a&gt;. It has both the English and American pronunciations but seemingly only for 42 out of 44 phonemes for some reason.&lt;/p&gt;
&lt;p&gt;But now what?&lt;/p&gt;
&lt;h3&gt;Data driven syllabus&lt;/h3&gt;
&lt;p&gt;I was thinking of taking a data driven approach to building a syllabus. Look at word frequencies in large corpus which I found for download on Kaggle&amp;rsquo;s &lt;a href="https://www.kaggle.com/datasets/rtatman/english-word-frequency?resource=download"&gt;English Word Frequency: ⅓ Million Most Frequent English Words on the Web&lt;/a&gt;. So I can get the most frequent 2, 3 and 4 letter words. But what I really need is frequency of 2-4 letter phonemes. So I need a dictionary that can translate the &lt;abbr title="the conventional spelling system of a language"&gt;orthography&lt;/abbr&gt; into &lt;abbr title="International Phonetic Alphabet"&gt;IPA&lt;/abbr&gt; phonemes. Fortunately someone has compiled such a dictionary: &lt;a href="https://github.com/open-dict-data/ipa-dict"&gt;ipa-dict&lt;/a&gt; - Monolingual wordlists with pronunciation information in &lt;abbr title="International Phonetic Alphabet"&gt;IPA&lt;/abbr&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Storybooks Speech and Hearing" src="http://alexander.whillas.com/images/african_stories.jpg" /&gt;
I also found a great &lt;a href="https://global-asp.github.io/storybooks-sah/stories/en/#"&gt;collection of African stories&lt;/a&gt; for different reading levels which might come in handy with &lt;abbr title="International Phonetic Alphabet"&gt;IPA&lt;/abbr&gt; versions.&lt;/p&gt;
&lt;h3&gt;Name change&lt;/h3&gt;
&lt;p&gt;Change the project name to &amp;ldquo;Phonetica&amp;rdquo;! Maybe that can be the name of a fantasy kingdom and the phonemes that inhabit it can anthropomorphised?&lt;/p&gt;
&lt;h3&gt;Side note on Rust&lt;/h3&gt;
&lt;p&gt;I found this really great &lt;a href="https://makepad.nl/makepad/examples/ironfish/src/index.html"&gt;online synth called Ironfish&lt;/a&gt; written in Rust as a demo for a UI lib called &lt;a href="https://github.com/makepad/makepad"&gt;makepad&lt;/a&gt; (&lt;a href="https://www.youtube.com/watch?v=rC4FCS-oMpg&amp;amp;t=1298s&amp;amp;ab_channel=RustNederland%28RustNL%29"&gt;RustNL 2023 talk&lt;/a&gt;). Making the game in Rust will mean that a web version will easy(er) to make. Worth considering.&lt;/p&gt;
&lt;h2&gt;6th July, 2023 - working memory and games&lt;/h2&gt;
&lt;p&gt;This book review came up on &lt;a href="https://news.ycombinator.com/item?id=36605085"&gt;Hacker News&lt;/a&gt; today:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;He devotes an entire chapter to the issue of computer games and the question of whether they are a negative influence or a positive one (in terms of cognitive ability &amp;mdash; he sidesteps the &amp;lsquo;violence debate&amp;rsquo;) . He points out that there is no general answer, referring back to the earlier discussion: some types of training are more effective than others, and it is critical that the working memory be pushed to its limit repeatedly. Thus it is critical to consider particular computer games, instead of trying to make a general statement about computer games as a whole. He describes a variety of studies that show some types of computer games as having a positive influence on cognitive skills. - &lt;a href="https://tertulia-moderna.blogspot.com/2010/12/overflowing-brain-by-torkel-klingberg.html"&gt;Book Review: &amp;lsquo;The Overflowing Brain&amp;rsquo; by Torkel Klingberg&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I should look into the reference he uses for the game stuff. I haven&amp;rsquo;t thought about how how games can help train and improve working memory. Could be an interesting direction.&lt;/p&gt;
&lt;p&gt;He also goes into Flow which is another topic I need to investigate in regards to education&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Klingberg concludes with a short chapter on the &amp;ldquo;information flood&amp;rdquo; that exists today and studies of its effects on cognitive ability. The results of some of these studies point to a kind of &amp;lsquo;sweet spot&amp;rsquo; of information flow &amp;mdash; we perform best when the challenge presented is just at the limits of our skill. He refers to a diagram developed by Mihály Csíkszentmihályi, who defines &amp;lsquo;flow&amp;rsquo; as &amp;ldquo;characterized by a high level of challenge and skill, in which the capacity of the doer exactly matches the demands of the task being done.... [W]hen challenge exceeds skill, we get stress. When skill exceeds challenge, we get a sense of control, which becomes boredom as the level of challenge drops.&amp;rdquo; (p. 168)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;29 June, 2023 - Research time&lt;/h2&gt;
&lt;p&gt;So, I&amp;rsquo;ve hit the point in which I&amp;rsquo;ve run out of things to code and need to do some research and design.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;phonemic awareness performance can predict literacy performance more accurately than variables such as intelligence, vocabulary knowledge, and socioeconomic status&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1"&gt;2&lt;/a&gt;&lt;/sup&gt; The good news is that phonological awareness is one of the few factors that teachers are able to influence significantly through instruction—unlike intelligence, vocabulary, and socioeconomic status &lt;sup id="fnref:2"&gt;&lt;a class="footnote-ref" href="#fn:2"&gt;3&lt;/a&gt;&lt;/sup&gt;. &lt;a href="https://www.readnaturally.com/research/5-components-of-reading/phonological-awareness#:~:text=Phonological%20Awareness%20Skills,onset%2Drime%2C%20and%20phoneme."&gt;cite&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="Phonological Awareness Skills" src="http://alexander.whillas.com/images/Phonological_Awareness_Skills.png" /&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Blending phonemes into words and segmenting words into phonemes contribute directly to learning to read and spell well. In fact, these two phonemic awareness skills contribute more to learning to read and spell well than any of the other activities under the phonological awareness umbrella. &lt;sup id="fnref:3"&gt;&lt;a class="footnote-ref" href="#fn:3"&gt;4&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So blending phonemes into words and segmenting words into phonemes are the main objectives of this project.&lt;/p&gt;
&lt;h2&gt;26 June, 2023 - Pivot (again) to Kivy&lt;/h2&gt;
&lt;p&gt;So while setting up pygame, which is really going back to basics, I was reminded of &lt;a href="https://kivy.org/"&gt;Kivy&lt;/a&gt; which is designed to make user interfaces. Another issue with pygame is that it is difficult to compile for iOS, and that is a target of this project i.e. touch screens are what I&amp;rsquo;m designing for, and Kivy makes his easy out of the box.&lt;/p&gt;
&lt;p&gt;The only problem with Kivy is that its model is a but opaque and the documentation is in various stages of freshness. The API documentation seems up to date but doesn&amp;rsquo;t have so many examples of common use cases and the tutorials are over a decade old. There are &lt;a href="https://github.com/kivy/kivy/tree/master/examples"&gt;examples&lt;/a&gt; that I have yet to delve into, most of them are pushing a decade old as well.&lt;/p&gt;
&lt;h3&gt;On the Bevy front&lt;/h3&gt;
&lt;p&gt;I did a little experiment on Friday. I had a question that I posted in three places, the &lt;a href="https://github.com/bevyengine/bevy/discussions/8919"&gt;bevy github discussion&lt;/a&gt;, &lt;a href="https://stackoverflow.com/questions/76527423/how-to-get-the-actual-pixel-size-of-a-transformed-sprite-in-bevy"&gt;Stack Overflow&lt;/a&gt; and &lt;a href="https://www.reddit.com/r/rust_gamedev/comments/14fkzwk/how_to_get_the_actual_pixel_size_of_a_transformed/?sort=new"&gt;r/rust_gamedev&lt;/a&gt;. The only one that got a reply and indeed and answer was Reddit (took 3 days). I think that Reddit works so well because developers go there for many reasons, news; gossip; ideas and help, all mixed together. So if you need help you have the highest chance the person with the answer&amp;rsquo;s eyeballs will see your post. Since the other two are just help support, people are less likely to look there. There is a threaded Help channel in the Discord that I didn&amp;rsquo;t look at which seems active, I&amp;rsquo;ll try that next time.&lt;/p&gt;
&lt;p&gt;So anyway the answer was you have to figure out scaling stuff yourself but you can get the info in the Transform:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt; 1&lt;/span&gt;
&lt;span class="normal"&gt; 2&lt;/span&gt;
&lt;span class="normal"&gt; 3&lt;/span&gt;
&lt;span class="normal"&gt; 4&lt;/span&gt;
&lt;span class="normal"&gt; 5&lt;/span&gt;
&lt;span class="normal"&gt; 6&lt;/span&gt;
&lt;span class="normal"&gt; 7&lt;/span&gt;
&lt;span class="normal"&gt; 8&lt;/span&gt;
&lt;span class="normal"&gt; 9&lt;/span&gt;
&lt;span class="normal"&gt;10&lt;/span&gt;
&lt;span class="normal"&gt;11&lt;/span&gt;
&lt;span class="normal"&gt;12&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;print_sprite_bounding_boxes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;mut&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;sprite_query&lt;/span&gt;: &lt;span class="nc"&gt;Query&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;Transform&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;Handle&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;With&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Sprite&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;assets&lt;/span&gt;: &lt;span class="nc"&gt;Res&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Assets&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;image_handle&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;sprite_query&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;iter_mut&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;image_dimensions&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;assets&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;image_handle&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;unwrap&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;scaled_image_dimension&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;image_dimensions&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;scale&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;truncate&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;bounding_box&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Rect&lt;/span&gt;::&lt;span class="n"&gt;from_center_size&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;translation&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;truncate&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;scaled_image_dimension&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="fm"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;bounding_box: {:?}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;bounding_box&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;So since I got an answer I might persevere with it a bit longer.&lt;/p&gt;
&lt;h3&gt;New Strategy&lt;/h3&gt;
&lt;p&gt;I might do two versions of the project at the same time. Since it takes soooooo loooong to get Bev answers I&amp;rsquo;ll work in Bevy until I hit a blocker, ask a question and then swtich to Kivy until I hot a blocker and then switch back again. I really want to learn Rust and I don&amp;rsquo;t have the bandwidth to learn it separately from the one side project I do have time for so I&amp;rsquo;ll keep tyring to shoehorn it in.&lt;/p&gt;
&lt;h2&gt;23 June, 2023 - Pivot to pygame&lt;/h2&gt;
&lt;p&gt;So as much as I like the setup of Bevy&amp;rsquo;s ECS I hit a major road block and can&amp;rsquo;t get any help on it. I basically want to get the pixel size of a scaled image and there doesn&amp;rsquo;t seem to be any way to do that in Bevy. I think because transforms are in WebGPU (WGPU) and Bevy its a one way street with from Bevy to WGPU.&lt;/p&gt;
&lt;p&gt;I found a hard time getting help with this as the Bevy subreddit has been taken down due the the &lt;a href="https://www.eff.org/deeplinks/2023/06/what-reddit-got-wrong?utm_source=pocket_saves"&gt;Reddit hullabaloo&lt;/a&gt; that is going on. The moderator didn&amp;rsquo;t bother with a transition period so there is nowhere to ask questions. I tried posting the same question on the &lt;a href="https://github.com/bevyengine/bevy/discussions/8919"&gt;bevy&amp;rsquo;s github discussion board&lt;/a&gt;, &lt;a href="https://www.reddit.com/r/rust_gamedev/comments/14fkzwk/how_to_get_the_actual_pixel_size_of_a_transformed/"&gt;/r/rust_gamedev&lt;/a&gt; and &lt;a href="https://stackoverflow.com/questions/76527423/how-to-get-the-actual-pixel-size-of-a-transformed-sprite-in-bevy"&gt;Stack Overflow&lt;/a&gt; to see which one would get a response but so far nada.&lt;/p&gt;
&lt;p&gt;In the mean time my son needs some help with reading so I&amp;rsquo;m going to pivot to pygame as I know I can bag out something fast.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ll learn Rust on one of my other side projects. I think approaching it from the other side, see what low hanging fruit there is a and make a game around it rather than fighting Bevy to do something specific. There is a &lt;a href="https://github.com/dimforge/salva"&gt;fluid simulation lib&lt;/a&gt; I found (which is based on a good, &lt;a href="https://nalgebra.org/"&gt;pure Rust linear algebra lib&lt;/a&gt;) which would be fun for kids as they love water parks especially sandpits with water!&lt;/p&gt;
&lt;h3&gt;Starting at the end&lt;/h3&gt;
&lt;p&gt;So the first thing I want to do is figure out how to make a n executable from my python script so I can CI/CD all the time and have it playable on 3 OSes (not sure if i get it working on MacOS if that will work on an iPad as that would be a great market). There are two options I can see &lt;a href="https://pyinstaller.org/en/stable/"&gt;pyInstaller&lt;/a&gt; and &lt;a href="https://cx-freeze.readthedocs.io/en/latest/"&gt;cx_Freeze&lt;/a&gt;. In both cases you need to run their build on the target OS.&lt;/p&gt;
&lt;h2&gt;15th June, 2023 - Sound problems&lt;/h2&gt;
&lt;p&gt;SO I have the button on the screen and it makes a sound when you press it. If you smash the button, which 5yos will do, it triggers so much that I fear the app will crash. I thought to try and fix this by installing a Bevy Kira extension but it very difficult to install. Will ask on some forums how to get it going. Don&amp;rsquo;t want to lose momentum so I&amp;rsquo;ll just use the built in stuff. Sound always plays second fiddle to graphics in games.&lt;/p&gt;
&lt;p&gt;Next I need to investigate &lt;a href="https://bevy-cheatbook.github.io/programming/events.html"&gt;events&lt;/a&gt; in Bevy and get the letters spawning when the button is pressed. I&amp;rsquo;m thinking SVG for letters so I can go crazy with fonts.&lt;/p&gt;
&lt;h3&gt;Bevy Events&lt;/h3&gt;
&lt;p&gt;There are pretty simple. Four steps&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create a plain public struct for the event&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;pub&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="nc"&gt;MyEvent&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;Register it on your main app&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;App&lt;/span&gt;::&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_event&lt;/span&gt;::&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;MyEvent&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="o"&gt;..&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;Trigger events in a system using an EventWriter&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;some_system&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;mut&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;somthing_happened_event&lt;/span&gt;: &lt;span class="nc"&gt;EventWriter&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;MyEvent&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;somthing_happened_event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MyEvent&lt;/span&gt;&lt;span class="p"&gt;{});&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;Then receive the event in as many systems as you like&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="normal"&gt;1&lt;/span&gt;
&lt;span class="normal"&gt;2&lt;/span&gt;
&lt;span class="normal"&gt;3&lt;/span&gt;
&lt;span class="normal"&gt;4&lt;/span&gt;
&lt;span class="normal"&gt;5&lt;/span&gt;
&lt;span class="normal"&gt;6&lt;/span&gt;
&lt;span class="normal"&gt;7&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;fn&lt;/span&gt; &lt;span class="nf"&gt;debug_system&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;mut&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;somthing_happened_events&lt;/span&gt;: &lt;span class="nc"&gt;EventReader&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;MyEvent&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;somthing_happened_events&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;iter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="fm"&gt;println!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Somthing did indeed happen...&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;13th June, 2023 - First steps&lt;/h2&gt;
&lt;p&gt;So after watching a few game dev videos on YouTube about indie success stories, they seem to recommend keeping a game dev log to help with motivation. So here I am.&lt;/p&gt;
&lt;p&gt;My son is five and a half and beginning to learn to read. Tonight actually he spelt out the word &amp;lsquo;wash&amp;rsquo; in a Sesame Street book I was reading him to my amazement. I wanted to make a game for him to help him with the sounding out of letters and ultimately help him to sound out letters. My only fear is that it will take too long and he wont need it by the time I finish.&lt;/p&gt;
&lt;p&gt;I did start to look into phonetics and phenomes, there are 44 in the English language.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Phonemes are taught as part of the Phonics Phases 1-6 and are a key method in helping children learn how to read. Phonics links phonemes, or the sounds, with the graphemes, or letters, they represent.
&lt;a href="https://www.twinkl.co.nz/teaching-wiki/phoneme"&gt;cite&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;Sound&lt;/h3&gt;
&lt;p&gt;I found this great video of a woman sounding out each of them.&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/XUCUhHUDZIY" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;I downloaded the video, extracted the sound, converted it to WAV, used Audacity to cut it up into individual voicings and then had to convert them to Ogg Vorbis audio format because I couldn&amp;rsquo;t find any documentation on what audio types Bevy accepts out of the box other than the example of &lt;code&gt;.ogg&lt;/code&gt; files. I still have to go through all of them and name them something useful. There are 4 soundings of each phoneme and a word example for each.&lt;/p&gt;
&lt;h3&gt;Fonts!&lt;/h3&gt;
&lt;p&gt;I&amp;rsquo;d forgotten how much fun fonts can be! Its going to be easy to give letters character using different fonts.&lt;/p&gt;
&lt;h3&gt;Follow the fun&lt;/h3&gt;
&lt;p&gt;But how to make it fun? I have a very basic idea of what I&amp;rsquo;m going to start with and hope by getting my son to play test it I can figure out what he likes about it a follow that. I saw a video by &lt;a href="https://www.wikiwand.com/en/Sid_Meier"&gt;Sid Meier&lt;/a&gt; (Sim City, The Sims) on Master Class about making games and his advise was to prototype ideas fast and test them for fun. You wont always know until you play what mechanic/dynamic will be the fun part. &amp;ldquo;Follow the fun!&amp;rdquo;.&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn:reading"&gt;
&lt;p&gt;&lt;a href="https://ldaustralia.org/research-papers/national-inquiry-into-the-teaching-of-literacy-australia-the-rowe-report/"&gt;National Inquiry into the Teaching of Literacy (Australia) – The Rowe Report&lt;/a&gt;, Ken Rowe - December, 2005&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.deb.co.nz/content/uploads/2023/04/Read-About-It.pdf"&gt;Read about it: Scientific evidence for effective teaching of reading&lt;/a&gt;, K Hempenstall, J Buckingham - 2016&amp;#160;&lt;a class="footnote-backref" href="#fnref:reading" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;Gillon, G. T. (2004). Phonological awareness: From research to practice. New York: The Guilford Press.&amp;#160;&lt;a class="footnote-backref" href="#fnref:1" title="Jump back to footnote 2 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:2"&gt;
&lt;p&gt;Lane, H. B., and P. C. Pullen. (2004). A sound beginning: Phonological awareness assessment and instruction. Boston: Allyn &amp;amp; Bacon.&amp;#160;&lt;a class="footnote-backref" href="#fnref:2" title="Jump back to footnote 3 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:3"&gt;
&lt;p&gt;National Reading Panel. (2000). Teaching children to read: An evidence-based assessment of the scientific research literature on reading and its implications for reading instruction. Washington, DC: National Institute of Child Health and Human Development.&lt;/p&gt;
&lt;p&gt;Snider, V. A. (1995). A primer on phonemic awareness: What it is, why it’s important, and how to teach it. School Psychology Review, 24(3), pp. 443-456.&amp;#160;&lt;a class="footnote-backref" href="#fnref:3" title="Jump back to footnote 4 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</content><category term="Rust"></category></entry><entry><title>Solid Pod Server</title><link href="http://alexander.whillas.com/solid-pod-server.html" rel="alternate"></link><published>2023-05-28T00:00:00+12:00</published><updated>2023-05-28T00:00:00+12:00</updated><author><name>Alexander Whillas</name></author><id>tag:alexander.whillas.com,2023-05-28:/solid-pod-server.html</id><summary type="html">&lt;p&gt;Trying to get behind the linked data movement by following Tim Berners-Lee&amp;rsquo;s latest crazy vision of the future of the web.&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="https://solidproject.org/"&gt;Solid&lt;/a&gt; is an attempt at making standards for returning control over your data, getting it out of the big tech silos. You run your own content server called a Solid Pod that you keep all your data in and control access to third party web apps to via OAuth2.&lt;/p&gt;
&lt;h1&gt;Some background&lt;/h1&gt;
&lt;p&gt;Tim Berners-Lee started the Solid Project which is a lose collection of standards, still in its infancy after more than a decade, which defines Solid Pod Servers, which are an online identity for you, described in Turtle/RDF and a place to keep your public and private data. The&lt;/p&gt;
&lt;h2&gt;The idea&lt;/h2&gt;
&lt;p&gt;I was thinking this might take off more if it was easy to deploy a personal solid server on a cloud provider where storage is cheap and you could use lambda/cloud functions to do the serving i.e. your not paying for them when they are not being used. Uses OAuth2 as authentication and the server is just a web server so all the components are already available as Rust crates, just have to bring it together. I&amp;rsquo;ve also seen some examples of using &lt;a href="https://github.com/nogibjj/rust-mlops-template/tree/main/lambdathreads"&gt;Rust for AWS lambda functions&lt;/a&gt; and apparently is much cheaper because of the speedup.&lt;/p&gt;
&lt;h2&gt;Persistent storage on the cheap?&lt;/h2&gt;
&lt;p&gt;The OAuth2 server needs to some persistent state to track the sessions and their details. Persistent state can be expensive in cloud as databases are not cheap.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;DynamoDB on AWS is &lt;a href="https://aws.amazon.com/free/database/?p=ft&amp;amp;z=subnav&amp;amp;loc=3"&gt;aways free&lt;/a&gt; under a certain amount (which it should be). There are &lt;a href="https://docs.aws.amazon.com/sdk-for-rust/latest/dg/rust_dynamodb_code_examples.html"&gt;Rust examples&lt;/a&gt;. Does force vendor lock in to AWS :( There are &lt;a href="https://docs.aws.amazon.com/sdk-for-rust/latest/dg/rust_dynamodb_code_examples.html"&gt;examples using the Rust SDK&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;AWS &lt;a href="https://aws.amazon.com/simpledb/"&gt;SimpleDB&lt;/a&gt;: Amazon SimpleDB is a highly available NoSQL data store that offloads the work of database administration. 25 SimpleDB Machine Hours and 1 GB of Storage for free each month. Sadlt there are no examples online for using SimpleDB and rust :(&lt;/li&gt;
&lt;li&gt;Keep a SQLite file in a bucket and load it for every request? Vendor agnostic but might be slow?&lt;/li&gt;
&lt;/ul&gt;</content><category term="Rust"></category></entry><entry><title>Learning Rust</title><link href="http://alexander.whillas.com/learning-rust.html" rel="alternate"></link><published>2023-04-29T00:00:00+12:00</published><updated>2023-06-23T00:00:00+12:00</updated><author><name>Alexander Whillas</name></author><id>tag:alexander.whillas.com,2023-04-29:/learning-rust.html</id><summary type="html">&lt;p&gt;Why I&amp;rsquo;m learning Rust and how I&amp;rsquo;m doing it.&lt;/p&gt;</summary><content type="html">&lt;h2&gt;But why&amp;hellip;?&lt;/h2&gt;
&lt;p&gt;Its always good to make decision based on data.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Graph from Stackoverflow Trends. Extrapolate the lines..." src="http://alexander.whillas.com/images/cpp_vs_rust_2023.svg" /&gt;&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m interested in Rust as I predict it will overtake C++ in popularity within the next 1-2 years if the trends in the above graph from &lt;a href="https://insights.stackoverflow.com/trends?tags=c%2B%2B%2Crust"&gt;Stackoverflow Trends&lt;/a&gt; continues. Rust is growing in popularity exponentially and C++ seems to have a linear decline.&lt;/p&gt;
&lt;p&gt;There is also the results of the &lt;a href="https://survey.stackoverflow.co/2023/?utm_source=banner&amp;amp;utm_medium=display&amp;amp;utm_campaign=dev-survey-results-2023&amp;amp;utm_content=survey-results#section-admired-and-desired-programming-scripting-and-markup-languages"&gt;Stackoverflow Annual Survey for 2023 Admired and Desired section&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Rust is the most admired language, more than 80% of developers that use it want to use it again next year&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The reasons for this, I think, are many.&lt;/p&gt;
&lt;p&gt;Rust has a built in package manager which also handles compilation and makes the developer experience easy. Easy always trumps difficult, every time&lt;sup id="fnref:everytime"&gt;&lt;a class="footnote-ref" href="#fn:everytime"&gt;2&lt;/a&gt;&lt;/sup&gt;. This is a huge boon to productivity and also a huge breath of fresh air after C++. It took me about 6 weeks to get started with C++ (finding a package manager amongst many, trying to understand CMake). I think what is happening is young&lt;sup id="fnref:young"&gt;&lt;a class="footnote-ref" href="#fn:young"&gt;1&lt;/a&gt;&lt;/sup&gt;, C++ developers are trying Rust and then being won over by this after struggling through C++.&lt;/p&gt;
&lt;p&gt;Rust has a lot of modern language features like the Monads Option(Maybe) and Result(Either) which tackle uncertainty up front. They are used consistently and everywhere within the standard lib.&lt;/p&gt;
&lt;p&gt;&lt;img alt="C++ vs Rust meme" src="http://alexander.whillas.com/images/cpp_vs_rust_meme.png" /&gt;&lt;/p&gt;
&lt;p&gt;Some C++ people say that the syntax is horrible, but I find it quite a contrary. I&amp;rsquo;ve studied C++ for a year and I still can&amp;rsquo;t open a C++ project and understand it. For example compare a tokenizer written in C++, Google&amp;rsquo;s &lt;a href="https://github.com/google/sentencepiece"&gt;sentencepiece&lt;/a&gt; written in a modern C++ style and following the conventions of Google&amp;rsquo;s C++ guideline (presumably), verse OpenAI&amp;rsquo;s &lt;a href="https://github.com/openai/tiktoken"&gt;TikToken&lt;/a&gt; which are both &lt;a href="https://www.wikiwand.com/en/Byte_pair_encoding"&gt;BPE&lt;/a&gt; tokeniser. I know what they both do so it should be easy to interpret the code, right?&lt;/p&gt;
&lt;p&gt;To start with I have no idea where to begin with the C++ project. There are no conventions for project layout or naming stuff. I know CMake is the de facto build tool for C++ but the &lt;a href="https://github.com/google/sentencepiece/blob/master/CMakeLists.txt"&gt;CMakeLists.txt&lt;/a&gt; file is long and cryptic. It imperative unlike the declarative Cargo.toml of TiKToken which is much shorter (21 lines vs 170!). I know exactly where to look for the entry point in any Rust project in ether the &lt;code&gt;src/lib.rs&lt;/code&gt; if it a library or the &lt;code&gt;src/main.rs&lt;/code&gt; if its an executable.&lt;/p&gt;
&lt;p&gt;The splitting of C++ code into header files and implementation files is bananas. No other language does this, is laborious to write and painful to read.&lt;/p&gt;
&lt;p&gt;But I guess the real genius of Rust is that it ditched Object Oriented Programming while keeping its best feature: polymorphism.&lt;/p&gt;
&lt;h2&gt;Current problems with Rust&lt;/h2&gt;
&lt;p&gt;The main thing Rust suffers from right now is being young. A lot of the ecosystem is immature. This is changing rapidly and there are opportunities for keen, young developers to get in there and become a major part of the ecosystem.&lt;/p&gt;
&lt;p&gt;No native linear algebra libraries or &lt;a href="https://www.reddit.com/r/rust/comments/smdl3m/rust_and_scientifichighperformance_computing/"&gt;Scientific/High-Performance Computing&lt;/a&gt; (HPC). It does have bindings for OpenBLAS a C++ lib but its apparently a nightmare to get working cross platform. This holds it back from deep learning and general data science which both rely heavily on matrix operations. &lt;a href="https://www.reddit.com/r/rust/comments/obghx7/fast_linear_algebra_library_for_rust/"&gt;But this is changing&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;But its still early days and I think these issues will be address in time.&lt;/p&gt;
&lt;h1&gt;But How?&lt;/h1&gt;
&lt;p&gt;Here are some materials I&amp;rsquo;ve been using:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PLai5B987bZ9CoVR-QEIN9foz4QCJ0H2Y8"&gt;The Rust Lang Book video series&lt;/a&gt; is quite handy to get up to speed on Rust quickly. Its basically going over the official &lt;a href="https://doc.rust-lang.org/book/"&gt;The Rust Programming Language Book&lt;/a&gt; which takes you through all the features of Rust in a systematic way. I find someone going over the material (at double speed) seems to be easier than reading the material directly. But its not enough by itself. Need to apply what I&amp;rsquo;ve learning quickly or else it doesn&amp;rsquo;t sink in.&lt;ul&gt;
&lt;li&gt;There is also an interactive &lt;a href="https://rust-book.cs.brown.edu/"&gt;quiz based&lt;/a&gt; leaning aid that I just discovered while writing this. I have never been into puzzels that much but I know if you don&amp;rsquo;t try to apply what you have just learnt&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PLVnntJRoP85JHGX7rGDu6LaF3fmDDbqyd"&gt;Learn Bevy Engine 0.10 Beginner Tutorial Series&lt;/a&gt; &lt;a href="https://bevyengine.org/"&gt;Bevy&lt;/a&gt; is an &lt;a href="https://www.wikiwand.com/en/Entity_component_system"&gt;ECS&lt;/a&gt; game system. ECS are all the range in game development because they are fast because they take advantage of CPU caching. This tutorial series takes you from zero to build a basic interactive game and give you a template for your own project. Although I&amp;rsquo;m not familiar will all of Rust&amp;rsquo;s syntax I find learning by doing the best strategy. I&amp;rsquo;ve just finished the first 10 episodes which is all there is at this time. Time to make my first game with this template.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;First steps&lt;/h2&gt;
&lt;p&gt;Some projects I&amp;rsquo;m thinking of starting or have started in current order of enthusiasm:&lt;/p&gt;
&lt;!-- - [Alphabetica Game]({filename}/alphabetica.md) - My son is learning to read at the moment and I think a game to help him match letters to sounds might help. Repetition is the key. I'm going to build it off the back of the Bevy tutorial I've been going through. --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://alexander.whillas.com/realtime-machine-learning.html"&gt;Online Machine Learning&lt;/a&gt; - I&amp;rsquo;ve seen some simple simulations on YouTube where people evolve neural networks (NN) to operate, embodied in a simple simulated environment. I want to do something similar but I want to do online/real-time training of the NN. I think this will lead to a more aware AI.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/awhillas/check"&gt;Chess engine&lt;/a&gt; - or now I&amp;rsquo;m thinking, rather a general purpose discreet, game engine. Create an interface to some set of rules which generate moves for a given position (and also indicate a winning move/position) it should be able to learn via self-play. I guess replicating AlphaZero would be the first step?&lt;/li&gt;
&lt;li&gt;&lt;a href="http://alexander.whillas.com/solid-pod-server.html"&gt;Solid Pod Server&lt;/a&gt; - all in one identity/public+private content server with built in authorization (OAuth+). The hard part of Solid, because it was very boring, was trying to understand the standards which are verbose and incomplete. It also uses OAuth + OpenID Connect at the core of its authorization protocol which in itself was the hardest part, because its complicated and I found it hard to find a &lt;a href="https://www.youtube.com/results?search_query=oauth2+flow"&gt;straight forward explanation&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Cave Boy&lt;/strong&gt;, a kids, open-world, adventure game. I&amp;rsquo;ve started &lt;a href="https://github.com/awhillas/caveboy"&gt;prototyping in Python&lt;/a&gt;. I&amp;rsquo;m thinking something like Don&amp;rsquo;t Starve (but less scary), or Stardew valley (with less detail) with a Captain Underpants sense of humour (i.e. potty). I&amp;rsquo;m thinking to aim it for 4-8 year olds, full touch screen and very simple mechanics. Everything is visually displayed at all times (no hidden menus or state i.e. inventory). TODO: break this out into a full blog post (i will as I get more into it). I have some concept art already!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This list is getting long&amp;hellip;&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn:young"&gt;
&lt;p&gt;The average age of C++ devs is over 40 these days, see &lt;a href="https://isocpp.org/files/papers/CppDevSurvey-2022-summary.pdf"&gt;Q2 and Q3&lt;/a&gt;, also Q6 notes the major pain point is &amp;ldquo;Managing libraries my application depends on&amp;rdquo;.&amp;#160;&lt;a class="footnote-backref" href="#fnref:young" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:everytime"&gt;
&lt;p&gt;This is why Netflix and Spotify are unicorns despite the fact that you can download everything they publish on torrents for free.&amp;#160;&lt;a class="footnote-backref" href="#fnref:everytime" title="Jump back to footnote 2 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</content><category term="Rust"></category></entry><entry><title>Realtime Machine Learning</title><link href="http://alexander.whillas.com/realtime-machine-learning.html" rel="alternate"></link><published>2023-04-29T00:00:00+12:00</published><updated>2023-08-08T00:00:00+12:00</updated><author><name>Alexander Whillas</name></author><id>tag:alexander.whillas.com,2023-04-29:/realtime-machine-learning.html</id><summary type="html">&lt;p&gt;Experiments in online/real-time Machine learning.&lt;/p&gt;</summary><content type="html">&lt;p&gt;In the Machine Learning Street Talk podcast&amp;rsquo;s episode on &amp;lsquo;Consciousness In The &lt;a href="https://www.wikiwand.com/en/Chinese_room"&gt;Chinese Room&lt;/a&gt;&amp;rsquo;, Francois Chollet&amp;rsquo;s &lt;a href="https://youtu.be/_KVAzAzO5HU?t=979"&gt;criticism of the thought experiment&lt;/a&gt; struck me&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;of course the person executing the rules does not understand Chinese, that&amp;rsquo;s not where you would expect understanding to be located in the system. Understanding is an imagined property of the information processing system as a whole. Understanding is not in the instructions themselves it&amp;rsquo;s not in the processor that executes the instructions it&amp;rsquo;s in the functional dynamics of how the input information is being processed by the instructions.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;He goes on to say that he believes the Chinese Room does not understand even if you are looking at the information processing system as a whole its because the book is static, or a crystallized skill, it can not adapt to changing circumstances&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;skill at a task is not sufficient to assert understanding of a task&amp;hellip; intelligence is characterized by the ability to learn and adapt and efficiently pick up new skills from experience&lt;/p&gt;
&lt;p&gt;If you understand what you&amp;rsquo;re doing then you can adapt what you&amp;rsquo;re doing when the world changes you can learn and adapt and improve and if you don&amp;rsquo;t understand what you&amp;rsquo;re doing then you&amp;rsquo;re stuck with a static skill and that&amp;rsquo;s really how you tell the difference between understanding and not understanding&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This made me think of what used to be called &amp;ldquo;online learning&amp;rdquo; or real-time learning&lt;sup id="fnref:online"&gt;&lt;a class="footnote-ref" href="#fn:online"&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;p&gt;So now I&amp;rsquo;m interested in doing some experiments with basic simulations, with neural networks that update their weights in real time and see where that leads. This is why I&amp;rsquo;m &lt;a href="http://alexander.whillas.com/a-new-hope.html"&gt;learning Rust&lt;/a&gt; incidentally.&lt;/p&gt;
&lt;h2&gt;Predator and Prey&lt;/h2&gt;
&lt;p&gt;The first experiment I&amp;rsquo;m going to try is a simple hunter-prey simulation like this&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/tVNoetVLuQg" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;What &lt;a href="https://www.youtube.com/@PezzzasWork"&gt;Pezzza&lt;/a&gt; is doing here is to take a fixed architecture neural network (NN) with input from a visual field, lines that trace out from the agent and detect the presence of ether friend or foe, and fully connect them to two outputs: speed and direction.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Pezzza's agent Neural Network" src="http://alexander.whillas.com/images/Pezzzas_NN.png" /&gt;&lt;/p&gt;
&lt;p&gt;Then, instead of using backpropagation to tune the NN&amp;rsquo;s weights he is choosing them randomly and letting natural selection kill off the bad ones&lt;sup id="fnref:mutation"&gt;&lt;a class="footnote-ref" href="#fn:mutation"&gt;2&lt;/a&gt;&lt;/sup&gt; while the ones that survive long enough to multiply propagate. This allows him to train a NN without an objective function.&lt;/p&gt;
&lt;p&gt;I want to take this basic setup and introduce real-time learning via backpropagation (BP). The problem with BP is that you need an objective function, which says how to update the weights. Its not obvious how to do this in this setup where the output is not the same as the objective function. This is where Reinforcement Learning traditionally.&lt;/p&gt;
&lt;p&gt;There is also &lt;a href="https://www.reddit.com/r/bevy/comments/1464kcq/i_built_a_self_driving_car_ai_using_rust_and_bevy/"&gt;this very similar approch&lt;/a&gt;, in &lt;a href="https://github.com/bones-ai/rust-drive-ai"&gt;Rust and using the Bevy framework&lt;/a&gt; which is exactly where I wanted to go with it.
&lt;a href="https://www.youtube.com/watch?v=H7RWcNgE-6s&amp;amp;t=1s&amp;amp;ab_channel=BonesAI"&gt;AI learns to play retro game road fighter (Reinforcement learning)&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;In search of an objective&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.deepmind.com/blog/alphazero-shedding-new-light-on-chess-shogi-and-go"&gt;AlphaZero&lt;/a&gt; they seem to have trained a NN to rate chess board positions without the needing of an immediate objective, sort of.&lt;/p&gt;
&lt;p&gt;From the paper &lt;a href="https://arxiv.org/pdf/1712.01815.pdf"&gt;Mastering Chess and Shogi by Self-Play with a General Reinforcement Learning Algorithm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The &lt;a href="http://alexander.whillas.com/free-energy-principle.html"&gt;Free Energy Principle&lt;/a&gt; seems to solve this problem by making the model try to predict the next sensor readings and minimising the difference between these predictions and the actual model state at the next time step. The model can also choose actions that it needs to predict the change in environment from. But how does it choose the action? Predicting the environment is key here but how does one steer the model to perform survival actions?&lt;/p&gt;
&lt;h2&gt;Predictive Models&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://blog.piekniewski.info/"&gt;Filip Piekniewski&lt;/a&gt; has this idea of &lt;a href="http://blog.piekniewski.info/2016/11/04/predictive-vision-in-a-nutshell/"&gt;predictive vision models&lt;/a&gt; which basically try to guess the next frame of video and there by model the world. One might look at this as the &lt;a href="https://en.wikipedia.org/wiki/Language_model"&gt;language modelling&lt;/a&gt; task of vision. He&amp;rsquo;s also suggesting adding online learning to this mix so the model trains and predicts at the same time, thus, according to Francois Chollet&amp;rsquo;s thesis would make it adaptive and thus conscious? And he&amp;rsquo;s got feedback from top back to bottom. He carries on about &lt;a href="https://www.tutorialspoint.com/artificial_neural_network/artificial_neural_network_associate_memory.htm"&gt;Associate Memory&lt;/a&gt; which is a type of NN (I need to look into)&lt;/p&gt;
&lt;p&gt;to be continued&amp;hellip;&lt;sup id="fnref:wip"&gt;&lt;a class="footnote-ref" href="#fn:wip"&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn:online"&gt;
&lt;p&gt;&amp;ldquo;Real-time&amp;rdquo; might be a better term as &amp;ldquo;online&amp;rdquo; implies the internet these days.&amp;#160;&lt;a class="footnote-backref" href="#fnref:online" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:mutation"&gt;
&lt;p&gt;Possibly he&amp;rsquo;s also mutating the offspring in order to get variation into the population. There might be crossover, the splicing of genes, by randomly selecting one of the other survivors to mate/share-genes with.&amp;#160;&lt;a class="footnote-backref" href="#fnref:mutation" title="Jump back to footnote 2 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:wip"&gt;
&lt;p&gt;This whole page is a work-in-progress and is just to document, and help me work through my ideas&amp;#160;&lt;a class="footnote-backref" href="#fnref:wip" title="Jump back to footnote 3 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</content><category term="Machine Learning"></category></entry><entry><title>A new Hope...?</title><link href="http://alexander.whillas.com/a-new-hope.html" rel="alternate"></link><published>2023-04-28T00:00:00+12:00</published><updated>2023-07-21T00:00:00+12:00</updated><author><name>Alexander Whillas</name></author><id>tag:alexander.whillas.com,2023-04-28:/a-new-hope.html</id><summary type="html">&lt;p&gt;A bit about the philosophy of this website.&lt;/p&gt;</summary><content type="html">&lt;p&gt;So I have decided to start this blog up again to track my (side) development effort and just have somewhere to brain dump.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m going to follow &lt;a href="https://simblob.blogspot.com/2018/05/thoughts-on-explorable-explanations.html"&gt;Red Blob Games&amp;rsquo; idea&lt;/a&gt;&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1"&gt;1&lt;/a&gt;&lt;/sup&gt; of making pages that I continually add to and update that are based around a single project or idea and might accumulate views over a long period.&lt;/p&gt;
&lt;p&gt;The structure will be organic. These pages will in turn branch off into other pages as the details become enough to warrant a new page like the Learning Rust page in which the project are starting to become pages in themselves. Its a collection of notes rather than a linear blog.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m torn about weather I should use google analytics or not. I feel that is more about ego than useful data. But it would be cool to see a HN spike on the graph! Ultimately this site is for me and possibly my son when he is old enough to read, so he can see what was going on in his old mans head.&lt;/p&gt;
&lt;h2&gt;Updated the font to IM Fell English&lt;/h2&gt;
&lt;p&gt;After seeing the article &lt;a href="https://www.linyangchen.com/Typography-Fell-Types-font"&gt;A 17th-century font in a 21st-century thesis&lt;/a&gt; on Hacker News I &lt;a href="https://developers.google.com/fonts/docs/getting_started"&gt;hacked&lt;/a&gt; the &lt;a href="https://github.com/hdra/Pelican-Cid"&gt;Pelican-Cid theme&lt;/a&gt; to use the IM Fell English font from &lt;a href="https://fonts.google.com/specimen/IM+Fell+English"&gt;Google Fonts&lt;/a&gt;.&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;Funny that I look back on this blog post now, which I must have read in 2018, and realise that what I took away from that blog post was not what it was about. He saw the cumulative pageview chart as a sign that people ate looking for explanations not explorable wizardry. I saw it was the long game is about accumulating views over a long period.&amp;#160;&lt;a class="footnote-backref" href="#fnref:1" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</content><category term="Life"></category></entry></feed>